<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ffmpeg on Hugo Grimoire</title>
    <link>http://localhost:1313/tags/ffmpeg/</link>
    <description>Recent content in Ffmpeg on Hugo Grimoire</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 09 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/ffmpeg/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Download Streams</title>
      <link>http://localhost:1313/post/2022-06-09-download-streams/</link>
      <pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-06-09-download-streams/</guid>
      <description>
        
          
            &lt;p&gt;This is my tentative work flow for downloading movie streams online. The gist of what I&#39;ve learned about this process is that every HTTP Live Stream (HLS) begins with an &lt;code&gt;.m3u8&lt;/code&gt; playlist with a MIME type of &lt;code&gt;x-mpegURL&lt;/code&gt; or &lt;code&gt;vnd.apple.mpegURL&lt;/code&gt;. This playlist lists a series of .ts files that are streamed one at a time and decoded so your browser is not burdened with downloading the entire movie every time you refresh the page. These .ts files can also be aggregated and assembled into a video.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Record Desktop Silently</title>
      <link>http://localhost:1313/post/2022-02-09-record-desktop-silently/</link>
      <pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2022-02-09-record-desktop-silently/</guid>
      <description>
        
          
            &lt;p&gt;Place these 3 files in any directory and run update.vbs to begin recording a Windows session silently.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/Trimad/RecordDesktopSilently&#34;&gt;Github Repository&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&#34;updateexe&#34;&gt;update.exe&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This file is just ffmpeg that&#39;s been renamed to be slightly more inconspicuous in Task Manager.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;updatebat&#34;&gt;update.bat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;There are two lines to this batch file. The first line deletes &amp;quot;output.mp4&amp;quot; if it already exists in the same directory.&lt;/li&gt;
&lt;li&gt;The framerate in frames per second of the recording is set here following the &amp;quot;-framerate&amp;quot; flag&lt;/li&gt;
&lt;li&gt;The amount of time in seconds to record is set here following the &amp;quot;-t&amp;quot; flag&lt;/li&gt;
&lt;li&gt;output.mp4 will be saved in the same directory after the specified amount of recording time is up.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;updatevbs&#34;&gt;update.vbs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This Visual Basic script runs udpate.bat without a visible command prompt.&lt;/li&gt;
&lt;/ul&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
