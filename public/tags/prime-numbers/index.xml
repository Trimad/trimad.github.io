<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prime Numbers on Hugo Grimoire</title>
    <link>http://localhost:1313/tags/prime-numbers/</link>
    <description>Recent content in Prime Numbers on Hugo Grimoire</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 17 May 2018 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/prime-numbers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ulam Spiral</title>
      <link>http://localhost:1313/post/2018-05-17-ulam-sprial/</link>
      <pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2018-05-17-ulam-sprial/</guid>
      <description>
        
          
            &lt;div class=&#34;iframe-wrapper-1-1&#34;&gt;
    &lt;iframe src=&#34;https://editor.p5js.org/Berkanan/full/PiHPI8iAw&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a href=&#34;https://editor.p5js.org/Berkanan/full/PiHPI8iAw&#34; target=&#34;_blank&#34;&gt;Launch this sketch is a new window (recommended)&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a href=&#34;https://editor.p5js.org/Berkanan/sketches/PiHPI8iAw&#34;&gt;Launch p5.js web editor&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The  &lt;a href=&#34;https://en.wikipedia.org/wiki/Ulam_spiral&#34;&gt;Ulam Spiral&lt;/a&gt; or prime spiral is a graphical depiction of the set of prime numbers, devised by mathematician Stanislaw Ulam in 1963 and popularized in Martin Gardner&#39;s Mathematical Games column in Scientific American a short time later. It is constructed by writing the positive integers in a square spiral and specially marking the prime numbers.&lt;/p&gt;
&lt;p&gt;What I&#39;ve done differently is allowed for iterating every integer in the grid forwards or backwards to search for long, connected diaganal lines of prime numbers in the grid. The framerate of the animation can be adjusted, as well as the &amp;quot;grid multiplier&amp;quot; which is how many cells to draw in each row and collumn. Double-clicking on the menu collapses it. There are also basic keyboard arrow controls:&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Basic Prime Checker, C&#43;&#43;</title>
      <link>http://localhost:1313/post/2018-03-24-basic-prime-checker/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2018-03-24-basic-prime-checker/</guid>
      <description>
        
          
            Exactly what it sounds like.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Sieve of Eratosthenes</title>
      <link>http://localhost:1313/post/2017-10-17-sieve-of-eratosthenes/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2017-10-17-sieve-of-eratosthenes/</guid>
      <description>
        
          
            This is my first attempt a prime sieve in assembly. It is largely a direct translation from a Sieve of Eratosthenes originally written in Java, so this program is not exactly optimally structured. Firstly, it stores all primes up to n in an array. Secondly, it counts the number of primes before n and stores that hexadecimal value in the EAX register. This is rough. There is much room for improvement, and I intend to revisit this program without using the MUL function. 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
