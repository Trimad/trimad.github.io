<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>P5.js on Hugo Grimoire</title>
    <link>https://trimad.github.io/categories/p5.js/</link>
    <description>Recent content in P5.js on Hugo Grimoire</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 04 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://trimad.github.io/categories/p5.js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Archimedean Spiral</title>
      <link>https://trimad.github.io/post/2022-05-04-archimedean-spiral/</link>
      <pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2022-05-04-archimedean-spiral/</guid>
      <description>
        
          
            &lt;iframe width=100% height=1024px src=&#34;https://editor.p5js.org/Berkanan/full/LjPig4gu_&#34;&gt;&lt;/iframe&gt;
&lt;h2&gt;&lt;a class=&#34;btn btn-outline-secondary btn-lg&#34; href=&#34;https://editor.p5js.org/Berkanan/sketches/LjPig4gu_&#34;&gt;Edit This Sketch&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This sketch draws an &lt;a href=&#34;https://en.wikipedia.org/wiki/Archimedean_spiral&#34;&gt;Archimedean Spiral&lt;/a&gt; using polar coordinates. If the &amp;quot;EXPORT&amp;quot; variable is true, the sketch will spit-out an SVG file of the drawn spiral. My motivation for making this was so I could cut-out a spiral with my wife&#39;s Cricut Maker and hang something more interesting above my son&#39;s bassinet than empty white ceiling.&lt;/p&gt;
&lt;h2&gt;Example SVG files&lt;/h2&gt;
&lt;p&gt;
      
  &lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;Desktop View&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;https://trimad.github.io/post/2022-05-04-archimedean-spiral/post/2022-05-04-archimedean-spiral/assets/img/2022-05-04/archimedes3.svg&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
{: width=&amp;quot;auto&amp;quot; height=&amp;quot;auto&amp;quot; }&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Fridge Magnet Simulator</title>
      <link>https://trimad.github.io/post/2018-11-16-fridge-magnet-simulator/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2018-11-16-fridge-magnet-simulator/</guid>
      <description>
        
          
            This is a virtual simulation of the magnets on my girlfriend&#39;s fridge.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Orbiting Pixels Utility</title>
      <link>https://trimad.github.io/post/2018-11-12-orbiting-pixels-utility/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2018-11-12-orbiting-pixels-utility/</guid>
      <description>
        
          
            This program works by creating a grid of evenly-spaced points. Each points has a corresponding object that rotates about that point and is assigned characteristics such as rotation radius, shape, and color that corresponds to the same x and y position of a source image. The phase of each object&#39;s rotation to the brightness value of the source image&#39;s corresponding pixel. This project taught me a lot about JavaScript and made for some fun animations.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Ulam Spiral</title>
      <link>https://trimad.github.io/post/2018-05-17-ulam-sprial/</link>
      <pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2018-05-17-ulam-sprial/</guid>
      <description>
        
          
            &lt;div class=&#34;iframe-wrapper-1-1&#34;&gt;
    &lt;iframe src=&#34;https://editor.p5js.org/Berkanan/full/PiHPI8iAw&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a href=&#34;https://editor.p5js.org/Berkanan/full/PiHPI8iAw&#34; target=&#34;_blank&#34;&gt;Launch this sketch is a new window (recommended)&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a href=&#34;https://editor.p5js.org/Berkanan/sketches/PiHPI8iAw&#34;&gt;Launch p5.js web editor&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The  &lt;a href=&#34;https://en.wikipedia.org/wiki/Ulam_spiral&#34;&gt;Ulam Spiral&lt;/a&gt; or prime spiral is a graphical depiction of the set of prime numbers, devised by mathematician Stanislaw Ulam in 1963 and popularized in Martin Gardner&#39;s Mathematical Games column in Scientific American a short time later. It is constructed by writing the positive integers in a square spiral and specially marking the prime numbers.&lt;/p&gt;
&lt;p&gt;What I&#39;ve done differently is allowed for iterating every integer in the grid forwards or backwards to search for long, connected diaganal lines of prime numbers in the grid. The framerate of the animation can be adjusted, as well as the &amp;quot;grid multiplier&amp;quot; which is how many cells to draw in each row and collumn. Double-clicking on the menu collapses it. There are also basic keyboard arrow controls:&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Merge Sort using WEBGL</title>
      <link>https://trimad.github.io/post/2018-02-05-merge-sort/</link>
      <pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2018-02-05-merge-sort/</guid>
      <description>
        
          
            This is a (perhaps overkill) 3D WEBGL visualization of Merge Sort using the WEBGL rendering mode.
          
          
        
      </description>
    </item>
    
    <item>
      <title>10PRINT Image Filter</title>
      <link>https://trimad.github.io/post/2018-01-31-10print-image-filter/</link>
      <pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2018-01-31-10print-image-filter/</guid>
      <description>
        
          
            &lt;p&gt;This sketch is a browser-based image filtering utility inspired by &lt;a href=&#34;https://10print.org/&#34;&gt;10PRINT&lt;/a&gt;. The UI allows users to produce faithful looking interpretations of 10PRINT, 10PRINT patterns that look hand-drawn, and users can even create an explosive shit-mess of scribbles, if they so wish.&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 100%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://editor.p5js.org/Berkanan/full/YDIQkPqbb&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34;  webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2&gt;&lt;a href=&#34;https://editor.p5js.org/Berkanan/full/YDIQkPqbb&#34; target=&#34;_blank&#34;&gt;Launch this sketch is a new window (recommended)&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a href=&#34;https://editor.p5js.org/Berkanan/sketches/YDIQkPqbb&#34;&gt;Launch p5.js web editor&lt;/a&gt;&lt;/h2&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Insertion Sort using WEBGL</title>
      <link>https://trimad.github.io/post/2018-01-28-insertion-sort/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2018-01-28-insertion-sort/</guid>
      <description>
        
          
            This is a (perhaps overkill) 3D WEBGL visualization of Insertion Sort using the WEBGL rendering mode.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Simple 2D Terrain Generation Using Perlin Noise</title>
      <link>https://trimad.github.io/post/2017-07-16-simple-2d-perlin-noise/</link>
      <pubDate>Sun, 16 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2017-07-16-simple-2d-perlin-noise/</guid>
      <description>
        
          
            This sketch maps perlin noise between a value of 0 and 255 across a grid. Values greater than or equal to 100 are &#34;grass&#34;, values between 75 and 100 are &#34;sand&#34;, and values less than or equal to 75 are &#34;water&#34;.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Arrays</title>
      <link>https://trimad.github.io/post/2016-12-13-arrays/</link>
      <pubDate>Tue, 13 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2016-12-13-arrays/</guid>
      <description>
        
          
            This is something I made when I was learning about Arrays of Objects.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
